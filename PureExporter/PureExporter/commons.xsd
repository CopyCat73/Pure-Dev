<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="v3.commons.pure.atira.dk" attributeFormDefault="unqualified" elementFormDefault="qualified"
            targetNamespace="v3.commons.pure.atira.dk">

    <xsd:simpleType name="double_2Decimals">
        <xsd:restriction base="xsd:decimal">
            <xsd:fractionDigits value="2" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_2048">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="2048"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_1024">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1024"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_512">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="512"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_400">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="400"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_256">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_128">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="128"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_64">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="string_9">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="9"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="percent">
        <xsd:restriction base="xsd:float">
            <xsd:maxInclusive value="1" />
            <xsd:minInclusive value="0" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="language">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="([a-z]{2}_[A-Z]{2})|([a-z]{2}|mul|und|mis)" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="country">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[A-Z]{2}" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="visibility">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Public"/>
            <xsd:enumeration value="Campus"/>
            <xsd:enumeration value="Restricted"/>
            <xsd:enumeration value="Confidential"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="classification">
        <xsd:restriction base="tns:string_1024">
            <xsd:pattern value="[a-zA-Z_0-9/\-]+" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="base64Binary">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[a-zA-Z0-9/+=]*" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="localized_string">
        <xsd:sequence>
            <xsd:element name="text" type="tns:localized_text" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="localized_text">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute type="tns:language" name="lang">
                    <xsd:annotation>
                        <xsd:documentation>An ISO 639-1 code</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute type="tns:country" name="country">
                    <xsd:annotation>
                        <xsd:documentation>An ISO 3166-1 code</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

	<xsd:complexType name="localized_string_256">
		<xsd:sequence>
			<xsd:element name="text" type="tns:localized_text_256" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="localized_text_256">
		<xsd:simpleContent>
			<xsd:extension base="tns:string_256">
				<xsd:attribute type="tns:language" name="lang">
					<xsd:annotation>
						<xsd:documentation>An ISO 639-1 code</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute type="tns:country" name="country">
					<xsd:annotation>
						<xsd:documentation>An ISO 3166-1 code</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

    <xsd:complexType name="localized_text_lang">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute type="tns:language" name="lang" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>An ISO 639-1 code and this locale should be a submission locale in the Pure installation</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="localized_text_256_lang">
        <xsd:simpleContent>
            <xsd:extension base="tns:string_256">
                <xsd:attribute type="tns:language" name="lang" use="required">
                    <xsd:annotation>
                        <xsd:documentation>An ISO 639-1 code</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="localized_text_1024_lang">
        <xsd:simpleContent>
            <xsd:extension base="tns:string_1024">
                <xsd:attribute type="tns:language" name="lang" use="required">
                    <xsd:annotation>
                        <xsd:documentation>An ISO 639-1 code</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

	<xsd:complexType name="localized_string_1024">
		<xsd:sequence>
			<xsd:element name="text" type="tns:localized_text_1024" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="localized_text_1024">
		<xsd:simpleContent>
			<xsd:extension base="tns:string_1024">
				<xsd:attribute type="tns:language" name="lang">
					<xsd:annotation>
						<xsd:documentation>An ISO 639-1 code</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute type="tns:country" name="country">
					<xsd:annotation>
						<xsd:documentation>An ISO 3166-1 code</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:complexType name="keywords" >
        <xsd:choice>
            <xsd:sequence maxOccurs="unbounded" minOccurs="1">
                <xsd:element name="logicalGroup" type="tns:logicalGroup" />
            </xsd:sequence>
            <xsd:sequence>
                <xsd:element name="keyword" type="tns:keyword" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="logicalGroup">
        <xsd:sequence>
            <xsd:element name="structuredKeywords" type="tns:structuredKeywords" minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>List of keywordGroups if keywords should be placed in different groups</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="logicalName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The logical name for the keyword group, if not a default group will be used</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="freeKeywords">
        <xsd:sequence>
            <xsd:element name="freeKeyword" type="tns:localized_string" minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>List of free keywords</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="structuredKeywords">
        <xsd:sequence minOccurs="1" maxOccurs="unbounded">
            <xsd:element name="structuredKeyword" type="tns:structuredKeyword">
                <xsd:annotation>
                    <xsd:documentation>List of structured keywords</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="structuredKeyword">
        <xsd:sequence>
            <xsd:element name="freeKeywords" type="tns:freeKeywords" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>List of free keywords that are related to the structured keyword</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="classification" type="tns:classification" use="optional">
            <xsd:annotation>
                <xsd:documentation>token for the structured keyword, if not set the keywords below will be read as free keywords not related to any structured keyword</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="contentReferences">
        <xsd:sequence>
            <xsd:element name="contentReference" type="tns:contentReference" maxOccurs="unbounded" minOccurs="1" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="contentReference">
        <xsd:sequence>
            <xsd:element name="contentName" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>This field is deprecated, matching by name is not supported. Data entered in this field is not used for matching.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute type="tns:non_explicit_id" name="contentId">
            <xsd:annotation>
                <xsd:documentation>The ID of the content</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="ids">
        <xsd:sequence>
            <xsd:element name="id" type="tns:id" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="id">
        <xsd:simpleContent>
            <xsd:extension base="tns:string_512">
                <xsd:annotation>
                    <xsd:documentation>The value of the id</xsd:documentation>
                </xsd:annotation>
                <xsd:attribute name="type" type="tns:classification" use="required">
                    <xsd:annotation>
                        <xsd:documentation>token from the classification scheme /dk/atira/pure/{family}/classifiedsource</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="id" type="tns:string_512" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>Identification id of the classified id</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="descriptions">
        <xsd:sequence>
            <xsd:element name="description" type="tns:classified_localized_string" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="classified_localized_string">
        <xsd:complexContent>
            <xsd:extension base="tns:localized_string">
                <xsd:attribute name="type" type="tns:classification" use="required">
                    <xsd:annotation>
                        <xsd:documentation>token from the classification e.g. /dk/atira/pure/upmproject/description</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="externalCollaborators">
        <xsd:sequence>
            <xsd:element name="collaborator" type="tns:externalCollaborator" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="externalCollaborator">
        <xsd:all>
            <xsd:element name="externalOrgName" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Name of an external organisation for this participant</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="externalOrgType" type="tns:classification" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>token from the classification scheme /dk/atira/pure/ueoexternalorganisation/ueoexternalorganisationtypes</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="externalOrgId" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Source id of an external organisation</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="leadCollaborator" type="xsd:boolean" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Source id of an external organisation</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="type" type="tns:classification" use="optional">
            <xsd:annotation>
                <xsd:documentation>token from classification scheme /dk/atira/pure/upm/collaborator</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="externalOrganisationAssociations">
        <xsd:sequence>
            <xsd:element name="externalOrganisationAssociation" type="tns:externalOrganisationAssociation" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="externalOrganisationAssociation">
        <xsd:sequence>
            <xsd:element name="externalOrgName" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Name of an external organisation for this participant</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="externalOrgType" type="tns:classification" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>token from the classification scheme /dk/atira/pure/ueoexternalorganisation/ueoexternalorganisationtypes</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="externalOrgId" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Source id of an external organisation</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

	<xsd:complexType name="externalOrganisation">
		<xsd:all>
			<xsd:element name="name" type="tns:string_1024" minOccurs="0" />
			<xsd:element name="type" type="tns:classification" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Classification scheme /dk/atira/pure/ueoexternalorganisation/ueoexternalorganisationtypes</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="country" type="tns:classification" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Classification scheme /dk/atira/pure/core/countries</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="externalOrgId" type="tns:string_1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Source id of an external organisation</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
            <xsd:element name="externalOrgSource" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Source of an external organisation</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
		</xsd:all>
	</xsd:complexType>

    <xsd:complexType name="dataType">
        <xsd:choice>
            <xsd:element name="http">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="url" type="xsd:string" minOccurs="1" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="file" >
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string" minOccurs="1" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="byte">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="base64EncodedString" type="tns:base64Binary" minOccurs="1" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="upmdocuments">
        <xsd:sequence>
            <xsd:element name="upmdocuments" type="tns:upmdocument" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="upmdocument">
        <xsd:all>
            <xsd:element name="type" type="tns:classification" minOccurs="0" default="other">
                <xsd:annotation>
                    <xsd:documentation>
                        For projects use a token from classification scheme /dk/atira/pure/core/document/types, default it other
                        For awards the type is always other
                        For applications use a token from classification scheme /dk/atira/pure/application/document/versiontypes, default is currentversion
                        NOTE! documents on applications are only available with Award Management modules
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="file" type="tns:dataType" minOccurs="1" />
            <xsd:element name="mimeType" type="tns:string_256" minOccurs="0"/>
            <xsd:element name="fileName" type="tns:string_256" minOccurs="0"/>
            <xsd:element name="title" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="visibility" type="tns:string_1024" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Visibility cannot be set on application documents.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute type="tns:string_512" name="id" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="documents">
        <xsd:sequence>
            <xsd:element name="documents" type="tns:document" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="document">
        <xsd:all>
            <xsd:element name="url" type="tns:url" minOccurs="0"/>
            <xsd:element name="type" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="filename" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="version" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="visibility" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="embargo_date" type="tns:date" minOccurs="0"/>
            <xsd:element name="rights" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="title" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="mimetype" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="filesize" type="tns:string_1024" minOccurs="0"/>
            <xsd:element name="digest" type="tns:string_1024" minOccurs="0"/>
        </xsd:all>
        <xsd:attribute type="tns:string_512" name="id" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="url">
        <xsd:all>
            <xsd:element name="url" type="tns:string_1024" />
            <xsd:element name="type" type="tns:string_1024" />
            <xsd:element name="description" type="tns:localized_string" />
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="compoundDate">
        <xsd:all>
            <xsd:element name="year" type="tns:year" minOccurs="1" />
            <xsd:element name="month" type="tns:month" minOccurs="0" />
            <xsd:element name="day" type="tns:day" minOccurs="0" />
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="name">
        <xsd:all>
            <xsd:element name="firstname" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="lastname" type="tns:string_1024" minOccurs="0"/>
        </xsd:all>
    </xsd:complexType>

	<xsd:complexType name="address">
		<xsd:all>
			<xsd:element name="country" type="tns:country" />
			<xsd:element name="road" type="tns:string_1024" />
			<xsd:element name="room" type="tns:string_1024" />
			<xsd:element name="city" type="tns:string_1024" />
			<xsd:element name="building" type="tns:string_1024" />
			<xsd:element name="postalCode" type="tns:string_1024" />
		</xsd:all>
	</xsd:complexType>

    <xsd:complexType name="CERIFAddress">
        <xsd:all>
            <xsd:element name="address1" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="address2" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="address3" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="address4" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="address5" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="postalCode" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="city" type="tns:string_1024" minOccurs="0" />
            <xsd:element name="subdivision" type="tns:classification" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Classification key from the scheme: /dk/atira/pure/core/countries/subdivision
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="country" type="tns:classification" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Classification key from the scheme: /dk/atira/pure/core/countries
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="geoLocation" type="tns:geoLocation" minOccurs="0" />
        </xsd:all>
    </xsd:complexType>

	<xsd:complexType name="classifiedAddresses">
		<xsd:sequence>
			<xsd:element name="classifiedAddress" type="tns:classifiedAddress" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="classifiedAddress">
		<xsd:all>
			<xsd:element name="addressType" type="tns:classification" >
				<xsd:annotation>
					<xsd:documentation>The type of address. Must be a valid classification from the /dk/atira/pure/person/personaddresstype classification scheme</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="city" type="tns:string_1024" minOccurs="0"/>
			<xsd:element name="postalCode" type="tns:string_1024" minOccurs="0"/>
			<xsd:element name="street" type="tns:string_1024" minOccurs="0"/>
			<xsd:element name="country" type="tns:country" minOccurs="0"/>
			<xsd:element name="building" type="tns:string_1024" minOccurs="0"/>
			<xsd:element name="displayFormat" type="tns:string_2048" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A formatted version of the address, that will be used instead of the default Pure formatting</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="subDivision" type="tns:classification" minOccurs="0"/>
			<xsd:element name="geoLocation" type="tns:geoLocation" minOccurs="0"/>
		</xsd:all>
		<xsd:attribute type="tns:string_512" name="id" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="geoLocation">
		<xsd:all>
			<xsd:element name="point" type="tns:string_512" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A geospatial point. Google maps format</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="polygon" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A geospatial polygon. Google maps format</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="classifiedPhoneNumbers">
		<xsd:sequence>
			<xsd:element name="classifiedPhoneNumber" type="tns:classifiedPhoneNumber" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="classifiedPhoneNumber">
		<xsd:all>
			<xsd:element name="classification" type="tns:classification">
				<xsd:annotation>
					<xsd:documentation>The type of phone number. Must be a valid classification from the /dk/atira/pure/person/personphonenumbertype classification scheme</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="value" type="tns:string_64"/>
		</xsd:all>
		<xsd:attribute type="tns:string_512" name="id" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="classifiedEmails">
		<xsd:sequence>
			<xsd:element name="classifiedEmail" type="tns:classifiedEmail" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="classifiedEmail">
		<xsd:all>
			<xsd:element name="classification" type="tns:classification">
				<xsd:annotation>
					<xsd:documentation>The type of email. Must be a valid classification from the /dk/atira/pure/person/personemailtype classification scheme</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="value" type="tns:string_256"/>
		</xsd:all>
		<xsd:attribute type="tns:string_512" name="id" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="classifiedWebAddresses">
		<xsd:sequence>
			<xsd:element name="classifiedWebAddress" type="tns:classifiedWebAddress" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="classifiedWebAddress">
		<xsd:all>
			<xsd:element name="classification" type="tns:classification" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The type of web address. Must be a valid classification from the /dk/atira/pure/person/personwebaddresstype classification scheme</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="value" type="tns:localized_string_1024" minOccurs="0"/>
		</xsd:all>
		<xsd:attribute type="tns:string_512" name="id" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="organisation">
        <xsd:all>
            <xsd:element name="name" type="tns:localized_string" minOccurs="0"/>
            <xsd:element name="name_variant" type="tns:classified_localized_string" minOccurs="0" />
            <xsd:element name="workflow" type="xsd:string" minOccurs="0"/>
            <xsd:element name="type" type="xsd:string" minOccurs="0" />
        </xsd:all>
        <xsd:attribute type="xsd:string" name="id" use="optional"/>
    </xsd:complexType>

	<xsd:complexType name="internalExternalOrganisationAssociations">
		<xsd:sequence>
			<xsd:element name="internalExternalOrganisationAssociation" type="tns:internalExternalOrganisationAssociation" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="internalExternalOrganisationAssociation">
		<xsd:choice>
			<xsd:element name="organisation" type="tns:organisation" minOccurs="0"/>
			<xsd:element name="externalOrganisation" type="tns:externalOrganisation" minOccurs="0"/>
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="persons">
		<xsd:sequence>
			<xsd:element name="person" type="tns:person" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="person">
		<xsd:sequence>
			<xsd:element name="firstName" type="tns:string_1024" minOccurs="0"/>
			<xsd:element name="lastName" type="tns:string_1024" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute type="tns:string_512" name="id" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Id of the person, this would be the id from an external source i.e. HR system.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="classifiedFiles">
		<xsd:sequence>
			<xsd:element name="classifiedFile" type="tns:classifiedFile" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="classifiedFile">
		<xsd:all>
			<xsd:element name="classification" type="tns:classification" minOccurs="0"/>
			<xsd:element name="fileUrl" type="tns:string_1024">
				<xsd:annotation>
					<xsd:documentation>HTTP url where the file can be found</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="fileName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="mimeType" type="xsd:string" minOccurs="0"/>
		</xsd:all>
		<xsd:attribute type="tns:string_512" name="id" />
	</xsd:complexType>

	<xsd:complexType name="links">
        <xsd:sequence>
            <xsd:element name="link" type="tns:link" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="link">
        <xsd:all>
            <xsd:element name="url" type="xsd:string" />
            <xsd:element name="type" type="tns:classification" minOccurs="0" />
            <xsd:element name="description" type="tns:localized_string" minOccurs="0" />
        </xsd:all>
        <xsd:attribute type="tns:string_512" name="id" />
    </xsd:complexType>

    <xsd:simpleType name="year">
        <xsd:restriction base="xsd:integer">
            <xsd:minInclusive value="1800" />
            <xsd:maxInclusive value="2100" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="month">
        <xsd:restriction base="xsd:integer">
            <xsd:minInclusive value="1" />
            <xsd:maxInclusive value="12" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="day">
        <xsd:restriction base="xsd:integer">
            <xsd:minInclusive value="1" />
            <xsd:maxInclusive value="31" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="date">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[\d]{1,2}-[\d]{1,2}-[\d]{4}" />
            <xsd:pattern value="[\d]{4}-[\d]{1,2}-[\d]{1,2}[+/T]?[\d]?[\d]?[:]?[\d]?[\d]?[:]?[\d]?[\d]?[+]?[\d]?[\d]?[:]?[\d]?[\d]?" />
            <xsd:pattern value="[\d]{4}-[\d]{1,2}-[\d]{1,2}[+/-]?[+/+]?[\d]?[\d]?[:]?[\d]?[\d]?[:]?[\d]?[\d]?"/>
        </xsd:restriction>
    </xsd:simpleType>
	<xsd:complexType name="dateRange">
		<xsd:all>
			<xsd:element name="startDate" type="tns:date" />
			<xsd:element name="endDate" type="tns:date" minOccurs="0" />
		</xsd:all>
	</xsd:complexType>

    <xsd:complexType name="classifiedIdentification">
        <xsd:choice>
            <xsd:element name="non_explicit_id" type="tns:non_explicit_id"/>
            <xsd:element ref="tns:pure_id"/>
            <xsd:element ref="tns:source_id"/>
            <xsd:element ref="tns:classified_id"/>
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="identification">
        <xsd:choice>
            <xsd:element name="non_explicit_id" type="tns:non_explicit_id"/>
            <xsd:element ref="tns:pure_id"/>
            <xsd:element ref="tns:source_id"/>
        </xsd:choice>
    </xsd:complexType>

    <xsd:simpleType name="non_explicit_id">
        <xsd:annotation>
            <xsd:documentation>When using non explicit id matching, the lookup for the content is handled in the following way and order:
                                1. Pure id matching
                                2. Source id matching
                                3. Classification defined id matching
                                All the above steps are taken and the result is returned. If more than one result is matched, due to for example duplicate ids, then the first result matched will be returned.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="tns:string_1024" />
    </xsd:simpleType>
    <xsd:element name="pure_id" type="xsd:long">
        <xsd:annotation>
            <xsd:documentation>Lookup is done through Pure id matching (the pure id is the id the content in question has inside Pure, and given by Pure when the content is created.)</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="source_id" type="tns:string_1024">
        <xsd:annotation>
            <xsd:documentation>Lookup is done through source id matching (the source id is the id the content was given when it was imported into Pure from an external source. This can be through synchronisation, import jobs etc.)</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="classified_id" type="tns:id">
        <xsd:annotation>
            <xsd:documentation>Lookup is done through classification defined id matching (classification defined ids are ids that content can be given inside Pure through the editor.)</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="metrics">
        <xsd:complexType>
            <xsd:sequence maxOccurs="unbounded">
                <xsd:element name="metric">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="year" type="tns:year"/>
                            <xsd:element name="type" type="tns:classification"/>
                            <xsd:element name="category" type="tns:classification" />
                            <xsd:element ref="tns:metricValues" />
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="metricValues">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="value">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="name" type="tns:string_64" />
                            <xsd:element name="integerValue" type="xsd:integer" minOccurs="0"/>
                            <xsd:element name="doubleValue" type="xsd:double" minOccurs="0"/>
                            <xsd:element name="stringValue" type="tns:classification" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="comments">
        <xsd:sequence minOccurs="1" maxOccurs="unbounded">
            <xsd:element name="comment">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="date" type="tns:date" minOccurs="0" />
                        <xsd:element name="username" type="tns:string_256" minOccurs="0"/>
                        <xsd:element name="text" type="tns:string_2048" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:simpleType name="gender">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="male"/>
            <xsd:enumeration value="female"/>
            <xsd:enumeration value="unknown"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:complexType name="periode">
        <xsd:sequence>
            <xsd:element name="startdate" type="tns:compoundDate" minOccurs="1"/>
            <xsd:element name="enddate" type="tns:compoundDate" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="keyword">
        <xsd:annotation>
            <xsd:documentation>Keyword, either a free text keyword, a structured keyword or a structured keyword with a free text keyword</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="tns:localized_text_lang">
                <xsd:attribute name="logicalName" default="keywordContainers" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>Logical name of the keyword group where the keyword should be placed. The default value referers to the default Keywords group</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="key" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The key of the keyword classification which represents a structured keyword. You must only provide the last part of the uri (key) of the classification you want to use.
                            The allowed keys depends on what classifications are in the keyword group with the provided logicalName
                            For example if the specified logical name uses the classification scheme /dk/atira/pure/subjectarea/asjc
                            then the key would be 1000 if you want to set 'General' as the structured keyword and 1200/1213 if you want 'Visual Arts and Performing Arts' under 'Arts and Humanities(all)'
                            If the specified logical name use a classification scheme, then the key is required.
                            To add a free text keyword to a structured keyword, you must specify logicalName, key and the text of the keyword.
                            Note the keyword configurations determines whether this is possible.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

	<xsd:attributeGroup name="id">
		<xsd:attribute name="id" type="tns:string_512" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					ID of the external entity. If it is not found in Pure, an element with this ID will be created for
					most types
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="source" type="tns:string_1024" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Source can be used to hint to Pure, when there are two entities that match during the ID search,
					which one to prefer.
					i.e. organisation A has a synchronised ID "1234" and organisation B was created by pure using ID
					1234. This would cause both to match, and the source can be used to hint the correct one
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>

    <xsd:attributeGroup name="lookupId">
        <xsd:attribute name="lookupId" type="tns:string_1024" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    ID of the entity. When using id matching, the lookup for the content is handled in the following way and order:
                    1. Pure id matching
                    2. Source id matching
                    3. Classification defined id matching
                    All the above steps are taken and the result is returned. If more than one result is matched, due to for example duplicate ids, then the first result matched will be returned.
                    If the source attribute is present then duplicate results will be resolved using the source hint
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="lookupHint" type="tns:string_1024" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Source can be used as hint to Pure on which entity should be preferred if more than one entity is matched during the ID search.
                    i.e. organisation A has a synchronised ID "1234" and organisation B was created by pure using ID
                    1234. This would cause both to match, and the source can be used to hint the correct one
                    Use pure as value if the Pure ID is preferred
                    Use the specific source as value if the id from a synchronisation is preferred, eg synchronisedUnifiedOrganisation
                    Use a key from a sources classification schema as value if the id from a specific source it preferred, eg organisationid for Organisation ID source
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="originId">
        <xsd:attributeGroup ref="tns:lookupId"/>
        <xsd:attribute name="origin" type="tns:origin" use="optional" default="internal">
            <xsd:annotation>
                <xsd:documentation>Origin is used for to specify whether it is an internal or external person/organisation</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>


    <xsd:simpleType name="origin">
        <xsd:restriction base="tns:string_9">
            <xsd:enumeration value="internal"/>
            <xsd:enumeration value="external"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="event">
        <xsd:all>
            <xsd:element name="title" type="tns:localized_string_1024" />
            <xsd:element name="startDate" type="tns:date"/>
        </xsd:all>
        <xsd:attributeGroup ref="tns:lookupId"/>
    </xsd:complexType>

    <xsd:complexType name="simpleEvent">
        <xsd:all>
            <xsd:element name="title" type="tns:string_512" minOccurs="0"/>
            <xsd:element name="startDate" type="tns:date" minOccurs="0"/>
        </xsd:all>
        <xsd:attributeGroup ref="tns:lookupId" />
    </xsd:complexType>

    <xsd:complexType name="journalOrPublisher">
        <xsd:choice>
            <xsd:element name="journal" type="tns:journal" />
            <xsd:element name="publisher" type="tns:publisher" />
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="journal">
        <xsd:all>
            <xsd:element name="title" type="tns:string_512" minOccurs="0"/>
            <xsd:element name="issn" type="tns:string_9" minOccurs="0"/>
        </xsd:all>
        <xsd:attributeGroup ref="tns:lookupId"/>
    </xsd:complexType>

    <xsd:complexType name="publisher">
        <xsd:all>
            <xsd:element name="name" type="tns:string_512" minOccurs="0"/>
        </xsd:all>
        <xsd:attributeGroup ref="tns:lookupId"/>
    </xsd:complexType>

    <xsd:complexType name="journalOrPublisherOrEvent">
        <xsd:choice>
            <xsd:element name="journal" type="tns:journal" />
            <xsd:element name="publisher" type="tns:publisher" />
            <xsd:element name="event" type="tns:simpleEvent" />
        </xsd:choice>
    </xsd:complexType>
</xsd:schema>